{"version":3,"sources":["components/menucontent/index.js","components/appbaritems/index.js","components/gisbaritems/index.js","components/gisbar/index.js","components/toc/index.js","components/mapeditor/index.js","App.js","serviceWorker.js","index.js"],"names":["MenuContent","render","Menu","elevation","keepMounted","anchorEl","props","open","Boolean","onClose","handleClose","MenuItem","Component","AppBarItems","handleClick","event","console","log","target","lastChild","data","setState","menuAnchor","currentTarget","ButtonGroup","variant","color","aria-label","Button","className","disableElevation","onClick","state","GISBarItems","id","Toolbar","ButtonBase","Divider","GISBar","AppBar","position","Toc","Drawer","List","map","text","index","ListItem","button","ListItemText","primary","MapEditor","L","center","zoom","tileLayer","attribution","maxZoom","tileSize","zoomOffset","accessToken","addTo","App","CssBaseline","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"2YAuBeA,E,4MAnBXC,OAAO,WACH,OACI,eAACC,EAAA,EAAD,CACAC,UAAW,EACXC,aAAW,EACXC,SAAU,EAAKC,MAAMD,SACrBE,KAAMC,QAAQ,EAAKF,MAAMD,UACzBI,QAAU,EAAKH,MAAMI,YALrB,UAOI,cAACC,EAAA,EAAD,qBACA,uBACA,cAACA,EAAA,EAAD,qBACA,uBACA,cAACA,EAAA,EAAD,yB,YAdUC,aCwCXC,E,kDAtCb,aAAc,IAAD,8BACX,gBAIFC,YAAY,SAACC,GACXC,QAAQC,IAAIF,EAAMG,OAAOC,UAAUC,MACnC,EAAKC,SAAS,CAACC,WAAWP,EAAMQ,iBAPrB,EASbb,YAAY,WACV,EAAKW,SAAS,CAACC,WAAW,QAVf,EAYbrB,OAAO,WACL,OACA,gCACE,eAACuB,EAAA,EAAD,CAAaC,QAAQ,YAAYC,MAAM,UAAUC,aAAW,iCAA5D,UACE,cAACC,EAAA,EAAD,CAAQC,UAAU,sBAAsBC,kBAAgB,EAACC,QAAS,EAAKjB,YAAvE,qBACA,cAACc,EAAA,EAAD,CAAQC,UAAU,sBAAsBC,kBAAgB,EAACC,QAAS,EAAKjB,YAAvE,kBACA,cAACc,EAAA,EAAD,CAAQC,UAAU,sBAAsBC,kBAAgB,EAACC,QAAS,EAAKjB,YAAvE,kBACA,cAACc,EAAA,EAAD,CAAQC,UAAU,sBAAsBC,kBAAgB,EAACC,QAAS,EAAKjB,YAAvE,mBACA,cAACc,EAAA,EAAD,CAAQC,UAAU,sBAAsBC,kBAAgB,EAACC,QAAS,EAAKjB,YAAvE,sBACA,cAACc,EAAA,EAAD,CAAQC,UAAU,sBAAsBC,kBAAgB,EAACC,QAAS,EAAKjB,YAAvE,oBACA,cAACc,EAAA,EAAD,CAAQC,UAAU,sBAAsBC,kBAAgB,EAACC,QAAS,EAAKjB,YAAvE,oBACA,cAACc,EAAA,EAAD,CAAQC,UAAU,sBAAsBC,kBAAgB,EAACC,QAAS,EAAKjB,YAAvE,oBACA,cAACc,EAAA,EAAD,CAAQC,UAAU,sBAAsBC,kBAAgB,EAACC,QAAS,EAAKjB,YAAvE,sBACA,cAACc,EAAA,EAAD,CAAQC,UAAU,sBAAsBC,kBAAgB,EAACC,QAAS,EAAKjB,YAAvE,iBACA,cAACc,EAAA,EAAD,CAAQC,UAAU,sBAAsBC,kBAAgB,EAACC,QAAS,EAAKjB,YAAvE,wBACA,cAACc,EAAA,EAAD,CAAQC,UAAU,sBAAsBC,kBAAgB,EAACC,QAAS,EAAKjB,YAAvE,qBAEF,cAAC,EAAD,CACAT,SAAU,EAAK2B,MAAMV,WACrBZ,YAAa,EAAKA,kBA7BpB,EAAKsB,MAAM,CAACV,WAAW,MAFZ,E,UADWV,a,gBC4EXqB,E,4MA3EXhC,OAAO,WACH,OACI,sBAAKiC,GAAG,cAAR,UACI,eAACC,EAAA,EAAD,CAASN,UAAU,aAAnB,UACI,sBAAKA,UAAU,YAAf,UACI,cAACO,EAAA,EAAD,CAAYP,UAAU,oBACtB,cAACO,EAAA,EAAD,CAAYP,UAAU,kBACtB,cAACO,EAAA,EAAD,CAAYP,UAAU,oBACtB,cAACO,EAAA,EAAD,CAAYP,UAAU,qBAE1B,sBAAKA,UAAU,YAAf,UACI,cAACO,EAAA,EAAD,CAAYP,UAAU,aACtB,cAACO,EAAA,EAAD,CAAYP,UAAU,gBACtB,cAACO,EAAA,EAAD,CAAYP,UAAU,iBACtB,cAACO,EAAA,EAAD,CAAYP,UAAU,oBACtB,cAACO,EAAA,EAAD,CAAYP,UAAU,uBACtB,cAACO,EAAA,EAAD,CAAYP,UAAU,mBACtB,cAACO,EAAA,EAAD,CAAYP,UAAU,oBACtB,cAACO,EAAA,EAAD,CAAYP,UAAU,kBACtB,cAACO,EAAA,EAAD,CAAYP,UAAU,qBAE1B,sBAAKA,UAAU,YAAf,UACI,cAACO,EAAA,EAAD,CAAYP,UAAU,qBACtB,cAACO,EAAA,EAAD,CAAYP,UAAU,yBAE1B,sBAAKA,UAAU,YAAf,UACI,cAACO,EAAA,EAAD,CAAYP,UAAU,gBACtB,cAACO,EAAA,EAAD,CAAYP,UAAU,cACtB,cAACO,EAAA,EAAD,CAAYP,UAAU,iBAE1B,sBAAKA,UAAU,YAAf,UACI,cAACO,EAAA,EAAD,CAAYP,UAAU,gBACtB,cAACO,EAAA,EAAD,CAAYP,UAAU,kBACtB,cAACO,EAAA,EAAD,CAAYP,UAAU,yBACtB,cAACO,EAAA,EAAD,CAAYP,UAAU,wBACtB,cAACO,EAAA,EAAD,CAAYP,UAAU,iBACtB,cAACO,EAAA,EAAD,CAAYP,UAAU,eACtB,cAACO,EAAA,EAAD,CAAYP,UAAU,uBAE1B,sBAAKA,UAAU,YAAf,UACI,cAACO,EAAA,EAAD,CAAYP,UAAU,sBACtB,cAACO,EAAA,EAAD,CAAYP,UAAU,gBACtB,cAACO,EAAA,EAAD,CAAYP,UAAU,kBAE1B,sBAAKA,UAAU,YAAf,UACI,cAACO,EAAA,EAAD,CAAYP,UAAU,eACtB,cAACO,EAAA,EAAD,CAAYP,UAAU,cACtB,cAACO,EAAA,EAAD,CAAYP,UAAU,wBAG9B,cAACQ,EAAA,EAAD,IACA,eAACF,EAAA,EAAD,CAASN,UAAU,aAAnB,UACA,sBAAKA,UAAU,YAAf,UACQ,cAACO,EAAA,EAAD,CAAYP,UAAU,kBACtB,cAACO,EAAA,EAAD,CAAYP,UAAU,oBACtB,cAACO,EAAA,EAAD,CAAYP,UAAU,uBACtB,cAACO,EAAA,EAAD,CAAYP,UAAU,0BACtB,cAACO,EAAA,EAAD,CAAYP,UAAU,uBACtB,cAACO,EAAA,EAAD,CAAYP,UAAU,0BAE9B,sBAAKA,UAAU,YAAf,UACQ,cAACO,EAAA,EAAD,CAAYP,UAAU,mBACtB,cAACO,EAAA,EAAD,CAAYP,UAAU,qBACtB,cAACO,EAAA,EAAD,CAAYP,UAAU,mBACtB,cAACO,EAAA,EAAD,CAAYP,UAAU,qBACtB,cAACO,EAAA,EAAD,CAAYP,UAAU,qBACtB,cAACO,EAAA,EAAD,CAAYP,UAAU,qBACtB,cAACO,EAAA,EAAD,CAAYP,UAAU,8BACtB,cAACO,EAAA,EAAD,CAAYP,UAAU,wC,YArEpBjB,aCmBX0B,E,4JAdb,WACE,OACE,eAACC,EAAA,EAAD,CAAQC,SAAS,QAAQN,GAAG,SAA5B,UACA,cAACC,EAAA,EAAD,CAASN,UAAU,QAAnB,SACE,cAAC,EAAD,MAEF,cAACQ,EAAA,EAAD,IACA,cAAC,EAAD,IACA,cAACA,EAAA,EAAD,W,GATezB,a,2CCYN6B,MAhBf,WACI,OACA,cAACC,EAAA,EAAD,CAAQb,UAAU,SAClBK,GAAG,OACHT,QAAQ,YAFR,SAGA,cAACkB,EAAA,EAAD,UACK,CAAC,WAAY,QAAS,QAAQC,KAAI,SAACC,EAAMC,GAAP,OACjC,cAACC,EAAA,EAAD,CAAUC,QAAM,EAAhB,SACE,cAACC,EAAA,EAAD,CAAcC,QAASL,KADHA,W,iBCkBjBM,G,6KApBX,WACI,IAAIP,EAAMQ,IAAER,IAAI,MAAO,CACnBS,OAAQ,CAAC,KAAM,SACfC,KAAM,IACNF,IAAEG,UAAU,qFAAsF,CAC9FC,YAAa,6NACbC,QAAS,GACTvB,GAAI,qBACJwB,SAAU,IACVC,YAAa,EACbC,YAAa,qGACdC,MAAMjB,K,oBAEjB,WACI,OACI,qBAAKV,GAAG,Y,GAhBItB,c,SCSTkD,MAVf,WACE,OACE,sBAAKjC,UAAU,MAAf,UACE,cAACkC,EAAA,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCDcvD,QACW,cAA7BwD,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASnE,OACP,cAAC,IAAMoE,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL/D,QAAQ+D,MAAMA,EAAMC,c","file":"static/js/main.753df710.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\nimport {Menu , MenuItem } from '@material-ui/core';\r\n\r\nclass MenuContent extends Component{\r\n    render=()=>{\r\n        return(\r\n            <Menu \r\n            elevation={0}\r\n            keepMounted\r\n            anchorEl={this.props.anchorEl}\r\n            open={Boolean(this.props.anchorEl)}\r\n            onClose ={this.props.handleClose}\r\n            >\r\n                <MenuItem>Item 1</MenuItem>\r\n                <hr/>\r\n                <MenuItem>Item 2</MenuItem>\r\n                <hr/>\r\n                <MenuItem>Item 3</MenuItem>\r\n            </Menu>\r\n        )     \r\n    }\r\n}\r\n\r\nexport default MenuContent;","import React,{Component} from 'react';\r\nimport {Button,ButtonGroup} from '@material-ui/core';\r\nimport MenuContent from '../menucontent';\r\n\r\nclass AppBarItems extends Component{\r\n  constructor(){\r\n    super()\r\n    this.state={menuAnchor:null}\r\n  }\r\n\r\n  handleClick=(event)=>{\r\n    console.log(event.target.lastChild.data)\r\n    this.setState({menuAnchor:event.currentTarget})\r\n  }\r\n  handleClose=()=>{\r\n    this.setState({menuAnchor:null})\r\n  }\r\n  render=()=>{\r\n    return(\r\n    <div>\r\n      <ButtonGroup variant=\"contained\" color=\"primary\" aria-label=\"contained primary button group\">\r\n        <Button className='dense toolbarbutton' disableElevation onClick={this.handleClick}>Project</Button>\r\n        <Button className='dense toolbarbutton' disableElevation onClick={this.handleClick}>Edit</Button>\r\n        <Button className='dense toolbarbutton' disableElevation onClick={this.handleClick}>View</Button>\r\n        <Button className='dense toolbarbutton' disableElevation onClick={this.handleClick}>Layer</Button>\r\n        <Button className='dense toolbarbutton' disableElevation onClick={this.handleClick}>Settings</Button>\r\n        <Button className='dense toolbarbutton' disableElevation onClick={this.handleClick}>Plugin</Button>\r\n        <Button className='dense toolbarbutton' disableElevation onClick={this.handleClick}>Vector</Button>\r\n        <Button className='dense toolbarbutton' disableElevation onClick={this.handleClick}>Raster</Button>\r\n        <Button className='dense toolbarbutton' disableElevation onClick={this.handleClick}>Database</Button>\r\n        <Button className='dense toolbarbutton' disableElevation onClick={this.handleClick}>Web</Button>\r\n        <Button className='dense toolbarbutton' disableElevation onClick={this.handleClick}>Processing</Button>\r\n        <Button className='dense toolbarbutton' disableElevation onClick={this.handleClick}>Help</Button>\r\n      </ButtonGroup>\r\n      <MenuContent \r\n      anchorEl={this.state.menuAnchor}\r\n      handleClose={this.handleClose}\r\n      />  \r\n    </div>\r\n    )\r\n    }\r\n};\r\n\r\nexport default AppBarItems;","import './gisbaritems.css'\r\nimport React,{Component} from 'react'\r\nimport {ButtonBase,Divider,Toolbar} from '@material-ui/core'\r\n\r\nclass GISBarItems extends Component{\r\n    render=()=>{\r\n        return(\r\n            <div id='gisbaritems'>\r\n                <Toolbar className='dense gray'>\r\n                    <div className='icongroup'>\r\n                        <ButtonBase className=\"newProject icon\"/>\r\n                        <ButtonBase className=\"openFile icon\"/>\r\n                        <ButtonBase className=\"saveAsFile icon\"/>\r\n                        <ButtonBase className=\"saveFile icon\"/> \r\n                    </div>\r\n                    <div className='icongroup'>\r\n                        <ButtonBase className=\"pan icon\"/>\r\n                        <ButtonBase className=\"zoomIn icon\"/>\r\n                        <ButtonBase className=\"zoomOut icon\"/>\r\n                        <ButtonBase className=\"zoomExtent icon\"/> \r\n                        <ButtonBase className=\"zoomSelection icon\"/>\r\n                        <ButtonBase className=\"zoomLayer icon\"/>\r\n                        <ButtonBase className=\"zoomRegion icon\"/>\r\n                        <ButtonBase className=\"zoomLast icon\"/> \r\n                        <ButtonBase className=\"zoomNext icon\"/>    \r\n                    </div>\r\n                    <div className='icongroup'>\r\n                        <ButtonBase className=\"addBookmark icon\"/>\r\n                        <ButtonBase className=\"showBookmark icon\"/>\r\n                    </div>\r\n                    <div className='icongroup'>\r\n                        <ButtonBase className=\"redraw icon\"/>\r\n                        <ButtonBase className=\"undo icon\"/>\r\n                        <ButtonBase className=\"redo icon\"/>\r\n                    </div>\r\n                    <div className='icongroup'>\r\n                        <ButtonBase className=\"select icon\"/>\r\n                        <ButtonBase className=\"unselect icon\"/>\r\n                        <ButtonBase className=\"selectionInvert icon\"/>\r\n                        <ButtonBase className=\"deleteSelected icon\"/>\r\n                        <ButtonBase className=\"measure icon\"/>\r\n                        <ButtonBase className=\"table icon\"/>\r\n                        <ButtonBase className=\"calculator icon\"/>\r\n                    </div>\r\n                    <div className='icongroup'>\r\n                        <ButtonBase className=\"modelBuilder icon\"/>\r\n                        <ButtonBase className=\"python icon\"/>\r\n                        <ButtonBase className=\"tools icon\"/>                    \r\n                    </div>\r\n                    <div className='icongroup'>\r\n                        <ButtonBase className=\"print icon\"/>\r\n                        <ButtonBase className=\"help icon\"/>\r\n                        <ButtonBase className=\"settings icon\"/>\r\n                    </div>\r\n                </Toolbar>\r\n                <Divider/>\r\n                <Toolbar className='dense gray'>\r\n                <div className='icongroup'>\r\n                        <ButtonBase className=\"layerDb  icon\"/>\r\n                        <ButtonBase className=\"layerDbAdd icon\"/>\r\n                        <ButtonBase className=\"layerDbCreate icon\"/>\r\n                        <ButtonBase className=\"createQueryLayer icon\"/>\r\n                        <ButtonBase className=\"layerDbExport icon\"/>\r\n                        <ButtonBase className=\"layerDbImport icon\"/>\r\n                </div>\r\n                <div className='icongroup'>\r\n                        <ButtonBase className=\"layerAdd  icon\"/>\r\n                        <ButtonBase className=\"layerCreate icon\"/>\r\n                        <ButtonBase className=\"layerEdit icon\"/>\r\n                        <ButtonBase className=\"layerExport icon\"/>\r\n                        <ButtonBase className=\"layerImport icon\"/>\r\n                        <ButtonBase className=\"layerRemove icon\"/>\r\n                        <ButtonBase className=\"layerOpacityIncrease icon\"/>\r\n                        <ButtonBase className=\"layerOpacityDecrease icon\"/>\r\n                </div>\r\n                </Toolbar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default GISBarItems;","import './gisbar.css';\r\nimport React,{Component} from 'react';\r\nimport { AppBar,Divider,Toolbar} from '@material-ui/core';\r\nimport AppBarItems from '../appbaritems';\r\nimport GISBarItems from '../gisbaritems'\r\n\r\n\r\n\r\nclass GISBar extends Component{\r\n  render(){\r\n    return(\r\n      <AppBar position=\"fixed\" id=\"appBar\">\r\n      <Toolbar className='dense'>\r\n        <AppBarItems/>\r\n      </Toolbar>\r\n      <Divider/>\r\n      <GISBarItems/>  \r\n      <Divider/>\r\n      </AppBar>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GISBar","import './toc.css';\r\nimport React from 'react';\r\nimport {Drawer,List,ListItem,ListItemText} from '@material-ui/core';\r\n\r\nfunction Toc(){\r\n    return(\r\n    <Drawer className='drawer' \r\n    id='toc1'\r\n    variant=\"permanent\">\r\n    <List>\r\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n    </List>\r\n    </Drawer>\r\n    )\r\n}\r\n\r\nexport default Toc;","import React, { Component } from 'react';\r\nimport L from 'leaflet';\r\nimport './mapeditor.css'\r\n\r\n// import 'https://unpkg.com/leaflet@1.7.1/dist/leaflet.css'\r\n\r\n\r\n\r\nclass MapEditor extends Component{\r\n    componentDidMount() {\r\n        var map = L.map('map', {\r\n            center: [30.5, 69.3451],\r\n            zoom: 6})\r\n            L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {\r\n                attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\r\n                maxZoom: 18,\r\n                id: 'mapbox/streets-v11',\r\n                tileSize: 512,\r\n                zoomOffset: -1,\r\n                accessToken: 'pk.eyJ1IjoiYWJiYXNhc2FkMDU3IiwiYSI6ImNrMWl5Z3BoazA3N2wzaHA1M3J3dDVhdm4ifQ.vr8lXr7BgiEES9ce-s3fkg'\r\n            }).addTo(map);\r\n    };\r\n    render(){\r\n        return(\r\n            <div id='map'></div>\r\n        )\r\n    };\r\n}\r\n\r\nexport default MapEditor;","import React from 'react';\nimport './App.css';\nimport GISBar from './components/gisbar/';\nimport Toc from './components/toc/';\nimport MapEditor from './components/mapeditor/';\nimport {CssBaseline} from '@material-ui/core';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CssBaseline />\n      <GISBar/>\n      <Toc/>\n      <MapEditor/>\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}